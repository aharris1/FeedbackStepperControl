#include <I2C_Anything.h>

#include <Wire.h>
#include <DigitalPin.h>

#define pin_STEP 11
#define pin_DIR 12
#define pinA 2
#define pinB 3

#define SEEK_TOLERANCE 0

int counter;

DigitalPin<pinA> dpA;
DigitalPin<pinB> dpB;

unsigned long lastPulseMicros = 0;
unsigned long pulseDelayMicros = 2000;

long distanceToTarget = 0;
volatile int targetEncoderPosition = 400;
volatile int rpm = 0;
float VESCrpm = 0;
void setup() {
  dpA.mode(INPUT);
  dpB.mode(INPUT);
  attachInterrupt(0, pinA_ISR, RISING);
  counter = 0;
  Serial.begin(9600);
  //Sets stepper control pins to outputs
  pinMode(pin_STEP, OUTPUT);
  pinMode(pin_DIR, OUTPUT);
  digitalWrite(A4, LOW);
  digitalWrite(A5, LOW);
  distanceToTarget = targetEncoderPosition - counter;
//  Serial.println(distanceToTarget);
}

void pinA_ISR(){
counter++;
}


void loop() {
  //DEBUG: prints distance to target
  Serial.println(distanceToTarget);
//  Sets the direction each loop
  if(distanceToTarget > 0){
    digitalWrite(pin_DIR, HIGH);
  }
  else{
    digitalWrite(pin_DIR, LOW);
  }

  if(abs(distanceToTarget > SEEK_TOLERANCE)){
    if(distanceToTarget > 0){
      digitalWrite(pin_STEP, HIGH);
      delayMicroseconds(250); //Short delay to make sure DRV8825 catches rising edge
      digitalWrite(pin_STEP, LOW);
    }
  }
  delay(1); //Enforces maximum step frequency of 1kHz
  //Recalculates distance to target
  distanceToTarget = targetEncoderPosition - counter;
}
